<<<<<<< HEAD
name: Patch (MariaDB)
=======
name: Server (MariaDB)
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)

on:
  pull_request:
  workflow_dispatch:

concurrency:
<<<<<<< HEAD
  group: patch-mariadb-develop-${{ github.event_name }}-${{ github.event.number }}
=======
  group: patch-mariadb-develop-${{ github.event.number }}
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)
  cancel-in-progress: true

permissions:
  # Do not change this as GITHUB_TOKEN is being used by roulette
  contents: read

jobs:
<<<<<<< HEAD
  checkrun:
    name: Build Check
    runs-on: ubuntu-latest

    outputs:
      build: ${{ steps.check-build.outputs.build }}

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Check if build should be run
        id: check-build
        run: |
          python "${GITHUB_WORKSPACE}/.github/helper/roulette.py"
        env:
          TYPE: "server"
          PR_NUMBER: ${{ github.event.number }}
          REPO_NAME: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Patch
    runs-on: ubuntu-latest
    needs: checkrun
    if: ${{ needs.checkrun.outputs.build == 'strawberry' }}
=======
  test:
    name: Patch
    runs-on: ubuntu-latest
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)
    timeout-minutes: 60

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MARIADB_ROOT_PASSWORD: travis
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Clone
<<<<<<< HEAD
        uses: actions/checkout@v4

      - name: Check for Merge Conflicts
        run: |
=======
        uses: actions/checkout@v3

      - name: Check for valid Python & Merge Conflicts
        run: |
          python -m compileall -f "${GITHUB_WORKSPACE}"
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)
          if grep -lr --exclude-dir=node_modules "^<<<<<<< " "${GITHUB_WORKSPACE}"
              then echo "Found merge conflicts"
              exit 1
          fi

<<<<<<< HEAD
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true

      - name: Add to Hosts
        run: echo "127.0.0.1 test_site" | sudo tee -a /etc/hosts

      - name: Cache pip
=======
      - name: Check if build should be run
        id: check-build
        run: |
          python "${GITHUB_WORKSPACE}/.github/helper/roulette.py"
        env:
          TYPE: "server"
          PR_NUMBER: ${{ github.event.number }}
          REPO_NAME: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
        uses: actions/setup-python@v4
        with:
          python-version: |
              3.7
              3.10

      - name: Setup Node
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true

      - name: Add to Hosts
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
        run: echo "127.0.0.1 test_site" | sudo tee -a /etc/hosts

      - name: Cache pip
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

<<<<<<< HEAD
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
=======
      - name: Cache node modules
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Get yarn cache directory path
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
<<<<<<< HEAD
=======
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)
        run: |
          bash ${GITHUB_WORKSPACE}/.github/helper/install_dependencies.sh
          pip install frappe-bench
          bash ${GITHUB_WORKSPACE}/.github/helper/install.sh
        env:
          BEFORE: ${{ env.GITHUB_EVENT_PATH.before }}
          AFTER: ${{ env.GITHUB_EVENT_PATH.after }}
          TYPE: server
          DB: mariadb

      - name: Run Patch Tests
<<<<<<< HEAD
        run: |
          cd ~/frappe-bench/
          sed -i 's/^worker:/# worker:/g' Procfile
          wget https://frappeframework.com/files/v13-frappe.sql.gz
          bench --site test_site --force restore ~/frappe-bench/v13-frappe.sql.gz
=======
        if: ${{ steps.check-build.outputs.build == 'strawberry' }}
        run: |
          cd ~/frappe-bench/
          wget https://frappeframework.com/files/v10-frappe.sql.gz
          bench --site test_site --force restore ~/frappe-bench/v10-frappe.sql.gz
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)

          source env/bin/activate
          cd apps/frappe/
          git remote set-url upstream https://github.com/frappe/frappe.git

          function update_to_version() {
            version=$1
<<<<<<< HEAD
=======
            py=$2
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)

            branch_name="version-$version-hotfix"
            echo "Updating to v$version"
            git fetch --depth 1 upstream $branch_name:$branch_name
            git checkout -q -f $branch_name

            pgrep honcho | xargs kill
<<<<<<< HEAD
            sleep 3
            rm -rf ~/frappe-bench/env
            bench -v setup env
            bench start &>> ~/frappe-bench/bench_start.log &
=======
            rm -rf ~/frappe-bench/env
            bench -v setup env --python $py
            bench start &> ~/frappe-bench/bench_start.log &
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)

            bench --site test_site migrate
          }

<<<<<<< HEAD
          update_to_version 14

          echo "Updating to last commit"
          pgrep honcho | xargs kill
          sleep 3
          rm -rf ~/frappe-bench/env
          git checkout -q -f "$GITHUB_SHA"
          bench -v setup env
          bench start &>> ~/frappe-bench/bench_start.log &
          bench --site test_site migrate
          bench --site test_site execute frappe.tests.utils.check_orpahned_doctypes

      - name: Show bench output
        if: ${{ always() }}
        run: |
          cd ~/frappe-bench
          cat bench_start.log || true
          cd logs
          for f in ./*.log*; do
            echo "Printing log: $f";
            cat $f
          done

  faux-test:
    name: Patch
    runs-on: ubuntu-latest
    needs: checkrun
    if: ${{ needs.checkrun.outputs.build != 'strawberry' }}

    steps:
      - name: Pass skipped tests unconditionally
        run: "echo Skipped"
=======
          update_to_version 12 python3.7
          update_to_version 13 python3.7

          echo "Updating to last commit"
          git checkout -q -f "$GITHUB_SHA"
          rm -rf ~/frappe-bench/env
          bench -v setup env
          bench --site test_site migrate
>>>>>>> c3bd8892e6 (fix: in case of owner, always include owner in count data)
